{"version":3,"sources":["reducers/visibleFilter.js","reducers/todos.js","reducers/index.js","store.js","components/Header/ToggleAllTodos/index.js","components/Header/ToggleAllTodos/ToggleAllTodos.jsx","components/Header/NewItemTodo/index.js","components/Header/NewItemTodo/NewItemTodo.jsx","components/Header/Header.jsx","components/Header/index.js","components/Header/HeaderContainer.jsx","actions/index.js","constants/ActionTypes.js","components/Footer/Filters/FilterItem/index.js","components/Footer/Filters/FilterItem/FilterItem.jsx","constants/filters.js","components/Footer/Filters/index.js","components/Footer/Filters/Filters.jsx","components/Footer/Footer.jsx","components/Footer/index.js","components/Footer/FooterContainer.jsx","components/TodoList/TodoListItem/index.js","components/TodoList/TodoListItem/TodoListItem.jsx","components/TodoList/TodoList.jsx","components/TodoList/TodoListContainer.jsx","components/App/index.js","components/App/App.jsx","index.js"],"names":["initialState","visibleFilter","localStorage","getItem","todos","JSON","parse","reducers","combineReducers","state","arguments","length","undefined","action","type","payload","setItem","newState","concat","Object","toConsumableArray","stringify","filter","el","id","index","findIndex","updatedObj","assign","isComplete","slice","textEdit","text","isToggleAll","every","map","objectSpread","store","createStore","composeWithDevTools","ToggleAllTodos","handleClick","onToggleAll","_this","props","_this$props","this","total","active","react_default","a","createElement","className","hidden","htmlFor","onClick","onChange","checked","PureComponent","NewItemTodo","e","addTodo","keyCode","target","value","Date","now","handleBlur","handleKeyDown","onBlur","onKeyDown","placeholder","Header","_ref","toggleAllTodos","react","Header_ToggleAllTodos","Header_NewItemTodo","HeaderContainer","connect","obj","FilterItem","setFilter","filterName","_this$props2","isCurrent","filterLabel","defaultChecked","name","filters","label","Filters","selectedFilter","elements","_ref2","Filters_FilterItem","key","Footer","completed","removeCompletedTodos","Footer_Filters","FooterContainer","TodoListItem","isEdit","inputFocusRef","React","createRef","handleInputClick","toggleTodo","handleBtnDeleteClick","removeTodo","handleLabelDblClick","setState","handleNewInputEdit","_this$props3","editTodo","current","focus","_this$props4","ref","defaultValue","onDoubleClick","TodoList","item","TodoList_TodoListItem","getFilter","App","components_Header","TodoListContainer","components_Footer","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.bfdb2401.chunk.js","sourcesContent":["const initialState = {\r\n  visibleFilter: localStorage.getItem('filter') || 'all',\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'SET_FILTER': {\r\n      localStorage.setItem('filter', payload);\r\n      return { visibleFilter: payload };\r\n    }\r\n    default: {\r\n      /* /if (type === '@@INIT') {\r\n        return state.visibleFilter;\r\n      }/ */\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","const initialState = {\r\n  todos: JSON.parse(localStorage.getItem('todo')) || [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { todos } = state;\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'ADD_TODO': {\r\n      const newState = { todos: [...todos, payload] };\r\n      localStorage.setItem('todo', JSON.stringify(newState.todos));\r\n      return newState;\r\n    }\r\n    case 'REMOVE_TODO': {\r\n      const newState = { todos: todos.filter(el => el.id !== payload) };\r\n      localStorage.setItem('todo', JSON.stringify(newState.todos));\r\n      return newState;\r\n    }\r\n    case 'TOGGLE_TODO': {\r\n      const index = todos.findIndex(el => el.id === payload);\r\n      const updatedObj = Object.assign({}, todos[index],\r\n        { isComplete: !todos[index].isComplete });\r\n      const newState = {\r\n        todos: [\r\n          ...todos.slice(0, index),\r\n          updatedObj,\r\n          ...todos.slice(index + 1),\r\n        ],\r\n      };\r\n      localStorage.setItem('todo', JSON.stringify(newState.todos));\r\n      return newState;\r\n    }\r\n    case 'EDIT_TODO': {\r\n      const { id, text: textEdit } = payload;\r\n      const index = todos.findIndex(el => el.id === id);\r\n      const updatedObj = Object.assign({}, todos[index], { text: textEdit });\r\n      const newState = {\r\n        todos: [\r\n          ...todos.slice(0, index),\r\n          updatedObj,\r\n          ...todos.slice(index + 1),\r\n        ],\r\n      };\r\n      localStorage.setItem('todo', JSON.stringify(newState.todos));\r\n      return newState;\r\n    }\r\n    case 'TOGGLE_ALL_TODOS': {\r\n      const isToggleAll = todos.every(el => el.isComplete);\r\n      const newState = {\r\n        todos: todos.map(el => ({\r\n          ...el,\r\n          isComplete: !isToggleAll,\r\n        })),\r\n      };\r\n      localStorage.setItem('todo', JSON.stringify(newState.todos));\r\n      return newState;\r\n    }\r\n    case 'REMOVE_COMPLETED_TODOS': {\r\n      const newState = { todos: todos.filter(el => !el.isComplete) };\r\n      localStorage.setItem('todo', JSON.stringify(newState.todos));\r\n      return newState;\r\n    }\r\n    default: {\r\n      /* /if (type === '@@INIT') {\r\n        return state.todos;\r\n      }/ */\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport visibleFilter from './visibleFilter';\r\nimport todos from './todos';\r\n\r\n\r\nconst reducers = combineReducers({\r\n  visibleFilter,\r\n  todos,\r\n});\r\nexport default reducers;\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, composeWithDevTools());\r\n\r\nexport default store;\r\n","import ToggleAllTodos from './ToggleAllTodos';\r\n\r\nexport default ToggleAllTodos;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ToggleAllTodos.css';\r\n\r\nexport default class ToggleAllTodos extends PureComponent {\r\n  static propTypes = {\r\n    onToggleAll: PropTypes.func.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    active: PropTypes.number.isRequired,\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { onToggleAll } = this.props;\r\n    onToggleAll();\r\n  }\r\n\r\n  render() {\r\n    const { total, active } = this.props;\r\n    return (\r\n      <label\r\n        className=\"label-select-all\"\r\n        hidden={total === 0}\r\n        htmlFor=\"select-all\"\r\n      >\r\n        <input\r\n          onClick={this.handleClick}\r\n          onChange={() => {}}\r\n          checked={active === 0}\r\n          type=\"checkbox\"\r\n          id=\"select-all\"\r\n          className=\"select-all\"\r\n        />\r\n        <span className=\"select-all-pseudo\" />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n","import NewItemTodo from './NewItemTodo';\r\n\r\nexport default NewItemTodo;\r\n","import React, { PureComponent } from 'react';\r\nimport './NewItemTodo.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class NewItemTodo extends PureComponent {\r\n  static propTypes = {\r\n    addTodo: PropTypes.func.isRequired,\r\n  }\r\n\r\n  createElement = (e) => {\r\n    const { addTodo } = this.props;\r\n    if (!e.keyCode || e.keyCode === 13) {\r\n      if (e.target.value !== '') {\r\n        const obj = { id: Date.now(), text: e.target.value, isComplete: false };\r\n        addTodo(obj);\r\n        e.target.value = '';\r\n      }\r\n    }\r\n  };\r\n\r\n  handleBlur = (e) => {\r\n    this.createElement(e);\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    this.createElement(e);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        className=\"header__new-item\"\r\n        onBlur={this.handleBlur}\r\n        onKeyDown={this.handleKeyDown}\r\n        placeholder=\"What needs to be done?\"\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ToggleAllTodos from './ToggleAllTodos';\r\nimport NewItemTodo from './NewItemTodo';\r\n\r\nconst Header = ({\r\n  total,\r\n  active,\r\n  toggleAllTodos,\r\n  addTodo,\r\n}) => (\r\n  <Fragment>\r\n    <ToggleAllTodos\r\n      onToggleAll={toggleAllTodos}\r\n      total={total}\r\n      active={active}\r\n    />\r\n    <NewItemTodo\r\n      addTodo={addTodo}\r\n    />\r\n  </Fragment>\r\n);\r\nexport default Header;\r\n\r\nHeader.propTypes = {\r\n  toggleAllTodos: PropTypes.func.isRequired,\r\n  addTodo: PropTypes.func.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  active: PropTypes.number.isRequired,\r\n};\r\n","import HeaderContainer from './HeaderContainer';\r\n\r\nexport default HeaderContainer;\r\n","import { connect } from 'react-redux';\r\nimport { addTodoAction, toggleAllTodosAction } from '../../actions';\r\nimport Header from './Header';\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { todos: { todos } } = state;\r\n  return {\r\n    total: todos.length,\r\n    active: todos.filter(el => !el.isComplete).length,\r\n  };\r\n};\r\nexport default\r\nconnect(mapStateToProps,\r\n  {\r\n    addTodo: addTodoAction,\r\n    toggleAllTodos: toggleAllTodosAction,\r\n  })(Header);\r\n","import * as types from '../constants/ActionTypes';\r\n\r\nconst {\r\n  REMOVE_TODO,\r\n  ADD_TODO,\r\n  TOGGLE_TODO,\r\n  EDIT_TODO,\r\n  SAVE_TODO,\r\n  SAVE_FILTER,\r\n  TOGGLE_ALL_TODOS,\r\n  REMOVE_COMPLETED_TODOS,\r\n  SET_FILTER,\r\n} = types;\r\n\r\nconst removeTodoAction = id => ({ type: REMOVE_TODO, payload: id });\r\nconst addTodoAction = obj => ({ type: ADD_TODO, payload: obj });\r\nconst toggleTodoAction = id => ({ type: TOGGLE_TODO, payload: id });\r\nconst editTodoAction = (id, text) => ({ type: EDIT_TODO, payload: { id, text } });\r\nconst saveTodoAction = () => ({ type: SAVE_TODO });\r\nconst toggleAllTodosAction = () => ({ type: TOGGLE_ALL_TODOS });\r\nconst removeCompletedTodosAction = () => ({ type: REMOVE_COMPLETED_TODOS });\r\nconst setFilterAction = filter => ({ type: SET_FILTER, payload: filter });\r\nconst saveFilterAction = filter => ({ type: SAVE_FILTER, payload: filter });\r\n\r\nexport {\r\n  removeTodoAction,\r\n  toggleTodoAction,\r\n  addTodoAction,\r\n  editTodoAction,\r\n  toggleAllTodosAction,\r\n  removeCompletedTodosAction,\r\n  setFilterAction,\r\n  saveTodoAction,\r\n  saveFilterAction,\r\n};\r\n","export const REMOVE_TODO = 'REMOVE_TODO';\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const SAVE_TODO = 'SAVE_TODO';\r\nexport const SAVE_FILTER = 'SAVE_FILTER';\r\nexport const TOGGLE_ALL_TODOS = 'TOGGLE_ALL_TODOS';\r\nexport const REMOVE_COMPLETED_TODOS = 'REMOVE_COMPLETED_TODOS';\r\nexport const SET_FILTER = 'SET_FILTER';\r\n","import FilterItem from './FilterItem';\r\n\r\nexport default FilterItem;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class FilterItem extends PureComponent {\r\n  static propTypes = {\r\n    setFilter: PropTypes.func.isRequired,\r\n    isCurrent: PropTypes.bool.isRequired,\r\n    filterName: PropTypes.string.isRequired,\r\n    filterLabel: PropTypes.string.isRequired,\r\n  }\r\n\r\n  handleClick = () => {\r\n    const {\r\n      setFilter,\r\n      filterName,\r\n    } = this.props;\r\n    setFilter(filterName);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isCurrent,\r\n      filterName,\r\n      filterLabel,\r\n    } = this.props;\r\n    return (\r\n      <li className=\"filters__item\">\r\n        <input\r\n          className=\"filter\"\r\n          defaultChecked={isCurrent}\r\n          type=\"radio\"\r\n          name=\"group\"\r\n          id={filterName}\r\n          onClick={this.handleClick}\r\n        />\r\n        <label\r\n          htmlFor={filterName}\r\n          className={filterName}\r\n        >\r\n          {filterLabel}\r\n        </label>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","const filters = [\r\n  { name: 'all', label: 'All' },\r\n  { name: 'active', label: 'Active' },\r\n  { name: 'completed', label: 'Completed' },\r\n];\r\nexport default filters;\r\n","import Filters from './Filters';\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FilterItem from './FilterItem/index';\r\nimport filters from '../../../constants/filters';\r\nimport './Filters.css';\r\n\r\nconst Filters = ({\r\n  selectedFilter,\r\n  setFilter,\r\n}) => {\r\n  const elements = filters.map(({ name, label }) => (\r\n    <FilterItem\r\n      key={name}\r\n      filterName={name}\r\n      filterLabel={label}\r\n      setFilter={setFilter}\r\n      isCurrent={selectedFilter === name}\r\n    />\r\n  ));\r\n  return <ul className=\"filters\">{elements}</ul>;\r\n};\r\nexport default Filters;\r\n\r\nFilters.propTypes = {\r\n  selectedFilter: PropTypes.string.isRequired,\r\n  setFilter: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Filters from './Filters';\r\n\r\nconst Footer = ({\r\n  total,\r\n  completed,\r\n  filter,\r\n  removeCompletedTodos,\r\n  setFilter,\r\n}) => (\r\n  <footer className={`footer ${total === 0 ? ' hidden' : ''}`}>\r\n    <span className=\"counter\">\r\n      {`${total - completed} items left`}\r\n    </span>\r\n    <Filters\r\n      selectedFilter={filter}\r\n      setFilter={setFilter}\r\n\r\n    />\r\n    <button\r\n      className=\"clear-completed\"\r\n      type=\"submit\"\r\n      hidden={completed === 0}\r\n      onClick={removeCompletedTodos}\r\n    >\r\n\r\n      Clear completed\r\n        </button>\r\n  </footer>\r\n);\r\n\r\nFooter.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  completed: PropTypes.number.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  removeCompletedTodos: PropTypes.func.isRequired,\r\n  setFilter: PropTypes.func.isRequired,\r\n};\r\nexport default Footer;\r\n","import FooterContainer from './FooterContainer';\r\n\r\nexport default FooterContainer;\r\n","import { connect } from 'react-redux';\r\nimport Footer from './Footer';\r\nimport { removeCompletedTodosAction, setFilterAction } from '../../actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { todos: { todos }, visibleFilter: { visibleFilter } } = state;\r\n  return {\r\n    filter: visibleFilter,\r\n    total: todos.length,\r\n    completed: todos.filter(el => el.isComplete).length,\r\n  };\r\n};\r\nexport default\r\nconnect(mapStateToProps,\r\n  {\r\n    removeCompletedTodos: removeCompletedTodosAction,\r\n    setFilter: setFilterAction,\r\n  })(Footer);\r\n","import TodoListItem from './TodoListItem';\r\n\r\nexport default TodoListItem;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TodoListItem.css';\r\n\r\n\r\nexport default class TodoListItem extends PureComponent {\r\n  state = { isEdit: false };\r\n\r\n  inputFocusRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    isComplete: PropTypes.bool.isRequired,\r\n    removeTodo: PropTypes.func.isRequired,\r\n    toggleTodo: PropTypes.func.isRequired,\r\n    editTodo: PropTypes.func.isRequired,\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { isEdit } = this.state;\r\n    if (isEdit) {\r\n      this.inputFocusRef.current.focus();\r\n    }\r\n  }\r\n\r\n  handleInputClick = () => {\r\n    const {\r\n      id,\r\n      toggleTodo,\r\n    } = this.props;\r\n    toggleTodo(id);\r\n  };\r\n\r\n  handleBtnDeleteClick = () => {\r\n    const {\r\n      id,\r\n      removeTodo,\r\n    } = this.props;\r\n    removeTodo(id);\r\n  };\r\n\r\n  handleLabelDblClick = () => {\r\n    this.setState({ isEdit: true });\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    this.handleNewInputEdit(e);\r\n  };\r\n\r\n  handleBlur = (e) => {\r\n    this.handleNewInputEdit(e);\r\n  };\r\n\r\n  handleNewInputEdit = (e) => {\r\n    const {\r\n      id,\r\n      editTodo,\r\n      removeTodo,\r\n    } = this.props;\r\n    let { text } = this.props;\r\n    if (!e.keyCode || e.keyCode === 13) {\r\n      if (e.target.value !== '') {\r\n        text = e.target.value;\r\n        editTodo(id, text);\r\n        this.setState({ isEdit: false });\r\n      } else {\r\n        removeTodo(id);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, isComplete } = this.props;\r\n    const { isEdit } = this.state;\r\n    return (\r\n      <li className=\"item\">\r\n        <div className=\"content-wrap\">\r\n          <input\r\n            onClick={this.handleInputClick}\r\n            className=\"complete\"\r\n            type=\"checkbox\"\r\n            checked={isComplete}\r\n            onChange={() => {}}\r\n          />\r\n          {isEdit ? (\r\n            <input\r\n              className=\"edit\"\r\n              ref={this.inputFocusRef}\r\n              onBlur={this.handleBlur}\r\n              onKeyDown={this.handleKeyDown}\r\n              defaultValue={text}\r\n            />\r\n          ) : (\r\n            <span className=\"caption\" onDoubleClick={this.handleLabelDblClick}>\r\n              {text}\r\n            </span>\r\n          )}\r\n          <button\r\n            className=\"delete\"\r\n            type=\"submit\"\r\n            onClick={this.handleBtnDeleteClick}\r\n          />\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoListItem from './TodoListItem/index';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = ({\r\n  todos,\r\n  toggleTodo,\r\n  editTodo,\r\n  removeTodo,\r\n}) => {\r\n  const elements = todos.map(item => (\r\n    <TodoListItem\r\n      key={item.id}\r\n      {...item}\r\n      toggleTodo={toggleTodo}\r\n      editTodo={editTodo}\r\n      removeTodo={removeTodo}\r\n    />\r\n\r\n  ));\r\n  return <ul className=\"todo-list\">{elements}</ul>;\r\n};\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired,\r\n  editTodo: PropTypes.func.isRequired,\r\n  removeTodo: PropTypes.func.isRequired,\r\n\r\n};\r\n\r\nexport default TodoList;\r\n","import { connect } from 'react-redux';\r\nimport { removeTodoAction, toggleTodoAction, editTodoAction } from '../../actions';\r\nimport TodoList from './TodoList';\r\n\r\nconst getFilter = (todos, filter) => {\r\n  switch (filter) {\r\n    case 'all':\r\n      return todos;\r\n    case 'completed':\r\n      return todos.filter(item => item.isComplete);\r\n    case 'active':\r\n      return todos.filter(item => !item.isComplete);\r\n    default:\r\n      return todos;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { todos: { todos }, visibleFilter: { visibleFilter } } = state;\r\n  return {\r\n    todos: getFilter(todos, visibleFilter),\r\n  };\r\n};\r\nexport default\r\nconnect(mapStateToProps,\r\n  {\r\n    removeTodo: removeTodoAction,\r\n    toggleTodo: toggleTodoAction,\r\n    editTodo: editTodoAction,\r\n  })(TodoList);\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React, { Fragment } from 'react';\r\nimport HeaderContainer from '../Header';\r\nimport FooterContainer from '../Footer';\r\nimport './App.css';\r\nimport TodoListContainer from '../TodoList/TodoListContainer';\r\n\r\nconst App = () => (\r\n  <Fragment>\r\n    <HeaderContainer />\r\n    <TodoListContainer />\r\n    <FooterContainer />\r\n  </Fragment>\r\n);\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n"],"sourceRoot":""}