{"version":3,"sources":["reducers/visibleFilter.js","reducers/todos.js","reducers/index.js","store.js","components/Header/ToggleAllTodos/index.js","components/Header/ToggleAllTodos/ToggleAllTodos.jsx","components/Header/NewItemTodo/index.js","components/Header/NewItemTodo/NewItemTodo.jsx","components/Header/Header.jsx","components/Header/index.js","components/Header/HeaderContainer.jsx","actions/index.js","constants/ActionTypes.js","components/Footer/Filters/FilterItem/index.js","components/Footer/Filters/FilterItem/FilterItem.jsx","constants/filters.js","components/Footer/Filters/index.js","components/Footer/Filters/Filters.jsx","components/Footer/Footer.jsx","components/Footer/index.js","components/Footer/FooterContainer.jsx","components/TodoList/TodoListItem/index.js","components/TodoList/TodoListItem/TodoListItem.jsx","components/TodoList/TodoList.jsx","components/TodoList/TodoListContainer.jsx","components/App/index.js","components/App/App.jsx","index.js"],"names":["initialState","visibleFilter","localStorage","getItem","state","arguments","length","undefined","action","type","payload","setItem","todos","JSON","parse","newState","concat","Object","toConsumableArray","stringify","filter","el","id","index","findIndex","updatedObj","assign","isComplete","slice","textEdit","text","isToggleAll","every","map","objectSpread","reducers","combineReducers","store","createStore","composeWithDevTools","ToggleAllTodos","handleClick","onToggleAll","_this","props","_this$props","this","total","active","react_default","a","createElement","className","hidden","htmlFor","onClick","onChange","checked","PureComponent","NewItemTodo","e","addTodo","keyCode","target","value","Date","now","handleBlur","handleKeyDown","onBlur","onKeyDown","placeholder","Header","_ref","toggleAllTodos","react","Header_ToggleAllTodos","Header_NewItemTodo","HeaderContainer","connect","obj","FilterItem","setFilter","filterName","_this$props2","isCurrent","filterLabel","defaultChecked","name","filters","label","Filters","selectedFilter","elements","_ref2","Filters_FilterItem","key","Footer","completed","removeCompletedTodos","Footer_Filters","FooterContainer","TodoListItem","isEdit","inputFocusRef","React","createRef","handleInputClick","toggleTodo","handleBtnDeleteClick","removeTodo","handleLabelDblClick","setState","handleNewInputEdit","_this$props3","editTodo","current","focus","_this$props4","ref","defaultValue","onDoubleClick","TodoList","item","TodoList_TodoListItem","getFilter","App","components_Header","TodoListContainer","components_Footer","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.11a334aa.chunk.js","sourcesContent":["const initialState = {\r\n  visibleFilter: localStorage.getItem('filter') || 'all',\r\n};\r\n\r\nconst visibleFilter = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'SET_FILTER': {\r\n      localStorage.setItem('filter', payload);\r\n      return payload;\r\n    }\r\n    default: {\r\n      if (type === '@@INIT') {\r\n        return state.visibleFilter;\r\n      }\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default visibleFilter;\r\n","const initialState = {\r\n  todos: JSON.parse(localStorage.getItem('todo')) || [],\r\n};\r\n\r\nconst todos = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'ADD_TODO': {\r\n      const newState = [...state, payload];\r\n      localStorage.setItem('todo', JSON.stringify(newState));\r\n      return newState;\r\n    }\r\n    case 'REMOVE_TODO': {\r\n      const newState = state.filter(el => el.id !== payload);\r\n      localStorage.setItem('todo', JSON.stringify(newState));\r\n      return newState;\r\n    }\r\n    case 'TOGGLE_TODO': {\r\n      const index = state.findIndex(el => el.id === payload);\r\n      const updatedObj = Object.assign({}, state[index],\r\n        { isComplete: !state[index].isComplete });\r\n      const newState = [\r\n        ...state.slice(0, index),\r\n        updatedObj,\r\n        ...state.slice(index + 1),\r\n      ];\r\n      localStorage.setItem('todo', JSON.stringify(newState));\r\n      return newState;\r\n    }\r\n    case 'EDIT_TODO': {\r\n      const { id, text: textEdit } = payload;\r\n      const index = state.findIndex(el => el.id === id);\r\n      const updatedObj = Object.assign({}, state[index], { text: textEdit });\r\n      const newState = [\r\n        ...state.slice(0, index),\r\n        updatedObj,\r\n        ...state.slice(index + 1),\r\n      ];\r\n      localStorage.setItem('todo', JSON.stringify(newState));\r\n      return newState;\r\n    }\r\n    case 'TOGGLE_ALL_TODOS': {\r\n      const isToggleAll = state.every(el => el.isComplete);\r\n      const newState = state.map(el => ({\r\n        ...el,\r\n        isComplete: !isToggleAll,\r\n      }));\r\n      localStorage.setItem('todo', JSON.stringify(newState));\r\n      return newState;\r\n    }\r\n    case 'REMOVE_COMPLETED_TODOS': {\r\n      const newState = state.filter(el => !el.isComplete);\r\n      localStorage.setItem('todo', JSON.stringify(newState));\r\n      return newState;\r\n    }\r\n    default: {\r\n      if (type === '@@INIT') {\r\n        return state.todos;\r\n      }\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default todos;\r\n","import { combineReducers } from 'redux';\r\nimport visibleFilter from './visibleFilter';\r\nimport todos from './todos';\r\n\r\n\r\nconst reducers = combineReducers({\r\n  visibleFilter,\r\n  todos,\r\n});\r\nexport default reducers;\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, composeWithDevTools());\r\n\r\nexport default store;\r\n","import ToggleAllTodos from './ToggleAllTodos';\r\n\r\nexport default ToggleAllTodos;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ToggleAllTodos.css';\r\n\r\nexport default class ToggleAllTodos extends PureComponent {\r\n  static propTypes = {\r\n    onToggleAll: PropTypes.func.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    active: PropTypes.number.isRequired,\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { onToggleAll } = this.props;\r\n    onToggleAll();\r\n  }\r\n\r\n  render() {\r\n    const { total, active } = this.props;\r\n    return (\r\n      <label\r\n        className=\"label-select-all\"\r\n        hidden={total === 0}\r\n        htmlFor=\"select-all\"\r\n      >\r\n        <input\r\n          onClick={this.handleClick}\r\n          onChange={() => {}}\r\n          checked={active === 0}\r\n          type=\"checkbox\"\r\n          id=\"select-all\"\r\n          className=\"select-all\"\r\n        />\r\n        <span className=\"select-all-pseudo\" />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n","import NewItemTodo from './NewItemTodo';\r\n\r\nexport default NewItemTodo;\r\n","import React, { PureComponent } from 'react';\r\nimport './NewItemTodo.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class NewItemTodo extends PureComponent {\r\n  static propTypes = {\r\n    addTodo: PropTypes.func.isRequired,\r\n  }\r\n\r\n  createElement = (e) => {\r\n    const { addTodo } = this.props;\r\n    if (!e.keyCode || e.keyCode === 13) {\r\n      if (e.target.value !== '') {\r\n        const obj = { id: Date.now(), text: e.target.value, isComplete: false };\r\n        addTodo(obj);\r\n        e.target.value = '';\r\n      }\r\n    }\r\n  };\r\n\r\n  handleBlur = (e) => {\r\n    this.createElement(e);\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    this.createElement(e);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        className=\"header__new-item\"\r\n        onBlur={this.handleBlur}\r\n        onKeyDown={this.handleKeyDown}\r\n        placeholder=\"What needs to be done?\"\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ToggleAllTodos from './ToggleAllTodos';\r\nimport NewItemTodo from './NewItemTodo';\r\n\r\nconst Header = ({\r\n  total,\r\n  active,\r\n  toggleAllTodos,\r\n  addTodo,\r\n}) => (\r\n  <Fragment>\r\n    <ToggleAllTodos\r\n      onToggleAll={toggleAllTodos}\r\n      total={total}\r\n      active={active}\r\n    />\r\n    <NewItemTodo\r\n      addTodo={addTodo}\r\n    />\r\n  </Fragment>\r\n);\r\nexport default Header;\r\n\r\nHeader.propTypes = {\r\n  toggleAllTodos: PropTypes.func.isRequired,\r\n  addTodo: PropTypes.func.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  active: PropTypes.number.isRequired,\r\n};\r\n","import HeaderContainer from './HeaderContainer';\r\n\r\nexport default HeaderContainer;\r\n","import { connect } from 'react-redux';\r\nimport { addTodoAction, toggleAllTodosAction } from '../../actions';\r\nimport Header from './Header';\r\n\r\nconst mapStateToProps = state => ({\r\n  total: state.todos.length,\r\n  active: state.todos.filter(el => !el.isComplete).length,\r\n});\r\nexport default\r\nconnect(mapStateToProps,\r\n  {\r\n    addTodo: addTodoAction,\r\n    toggleAllTodos: toggleAllTodosAction,\r\n  })(Header);\r\n","import * as types from '../constants/ActionTypes';\r\n\r\nconst {\r\n  REMOVE_TODO,\r\n  ADD_TODO,\r\n  TOGGLE_TODO,\r\n  EDIT_TODO,\r\n  SAVE_TODO,\r\n  SAVE_FILTER,\r\n  TOGGLE_ALL_TODOS,\r\n  REMOVE_COMPLETED_TODOS,\r\n  SET_FILTER,\r\n} = types;\r\n\r\nconst removeTodoAction = id => ({ type: REMOVE_TODO, payload: id });\r\nconst addTodoAction = obj => ({ type: ADD_TODO, payload: obj });\r\nconst toggleTodoAction = id => ({ type: TOGGLE_TODO, payload: id });\r\nconst editTodoAction = (id, text) => ({ type: EDIT_TODO, payload: { id, text } });\r\nconst saveTodoAction = () => ({ type: SAVE_TODO });\r\nconst toggleAllTodosAction = () => ({ type: TOGGLE_ALL_TODOS });\r\nconst removeCompletedTodosAction = () => ({ type: REMOVE_COMPLETED_TODOS });\r\nconst setFilterAction = filter => ({ type: SET_FILTER, payload: filter });\r\nconst saveFilterAction = filter => ({ type: SAVE_FILTER, payload: filter });\r\n\r\nexport {\r\n  removeTodoAction,\r\n  toggleTodoAction,\r\n  addTodoAction,\r\n  editTodoAction,\r\n  toggleAllTodosAction,\r\n  removeCompletedTodosAction,\r\n  setFilterAction,\r\n  saveTodoAction,\r\n  saveFilterAction,\r\n};\r\n","export const REMOVE_TODO = 'REMOVE_TODO';\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const SAVE_TODO = 'SAVE_TODO';\r\nexport const SAVE_FILTER = 'SAVE_FILTER';\r\nexport const TOGGLE_ALL_TODOS = 'TOGGLE_ALL_TODOS';\r\nexport const REMOVE_COMPLETED_TODOS = 'REMOVE_COMPLETED_TODOS';\r\nexport const SET_FILTER = 'SET_FILTER';\r\n","import FilterItem from './FilterItem';\r\n\r\nexport default FilterItem;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class FilterItem extends PureComponent {\r\n  static propTypes = {\r\n    setFilter: PropTypes.func.isRequired,\r\n    isCurrent: PropTypes.bool.isRequired,\r\n    filterName: PropTypes.string.isRequired,\r\n    filterLabel: PropTypes.string.isRequired,\r\n  }\r\n\r\n  handleClick = () => {\r\n    const {\r\n      setFilter,\r\n      filterName,\r\n    } = this.props;\r\n    setFilter(filterName);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isCurrent,\r\n      filterName,\r\n      filterLabel,\r\n    } = this.props;\r\n    return (\r\n      <li className=\"filters__item\">\r\n        <input\r\n          className=\"filter\"\r\n          defaultChecked={isCurrent}\r\n          type=\"radio\"\r\n          name=\"group\"\r\n          id={filterName}\r\n          onClick={this.handleClick}\r\n        />\r\n        <label\r\n          htmlFor={filterName}\r\n          className={filterName}\r\n        >\r\n          {filterLabel}\r\n        </label>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","const filters = [\r\n  { name: 'all', label: 'All' },\r\n  { name: 'active', label: 'Active' },\r\n  { name: 'completed', label: 'Completed' },\r\n];\r\nexport default filters;\r\n","import Filters from './Filters';\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FilterItem from './FilterItem/index';\r\nimport filters from '../../../constants/filters';\r\nimport './Filters.css';\r\n\r\nconst Filters = ({\r\n  selectedFilter,\r\n  setFilter,\r\n}) => {\r\n  const elements = filters.map(({ name, label }) => (\r\n    <FilterItem\r\n      key={name}\r\n      filterName={name}\r\n      filterLabel={label}\r\n      setFilter={setFilter}\r\n      isCurrent={selectedFilter === name}\r\n    />\r\n  ));\r\n  return <ul className=\"filters\">{elements}</ul>;\r\n};\r\nexport default Filters;\r\n\r\nFilters.propTypes = {\r\n  selectedFilter: PropTypes.string.isRequired,\r\n  setFilter: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Filters from './Filters';\r\n\r\nconst Footer = ({\r\n  total,\r\n  completed,\r\n  filter,\r\n  removeCompletedTodos,\r\n  setFilter,\r\n}) => (\r\n  <footer className={`footer ${total === 0 ? ' hidden' : ''}`}>\r\n    <span className=\"counter\">\r\n      {`${total - completed} items left`}\r\n    </span>\r\n    <Filters\r\n      selectedFilter={filter}\r\n      setFilter={setFilter}\r\n\r\n    />\r\n    <button\r\n      className=\"clear-completed\"\r\n      type=\"submit\"\r\n      hidden={completed === 0}\r\n      onClick={removeCompletedTodos}\r\n    >\r\n\r\n      Clear completed\r\n        </button>\r\n  </footer>\r\n);\r\n\r\nFooter.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  completed: PropTypes.number.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  removeCompletedTodos: PropTypes.func.isRequired,\r\n  setFilter: PropTypes.func.isRequired,\r\n};\r\nexport default Footer;\r\n","import FooterContainer from './FooterContainer';\r\n\r\nexport default FooterContainer;\r\n","import { connect } from 'react-redux';\r\nimport Footer from './Footer';\r\nimport { removeCompletedTodosAction, setFilterAction } from '../../actions';\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.visibleFilter,\r\n  total: state.todos.length,\r\n  completed: state.todos.filter(el => el.isComplete).length,\r\n});\r\nexport default\r\nconnect(mapStateToProps,\r\n  {\r\n    removeCompletedTodos: removeCompletedTodosAction,\r\n    setFilter: setFilterAction,\r\n  })(Footer);\r\n","import TodoListItem from './TodoListItem';\r\n\r\nexport default TodoListItem;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TodoListItem.css';\r\n\r\n\r\nexport default class TodoListItem extends PureComponent {\r\n  state = { isEdit: false };\r\n\r\n  inputFocusRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    isComplete: PropTypes.bool.isRequired,\r\n    removeTodo: PropTypes.func.isRequired,\r\n    toggleTodo: PropTypes.func.isRequired,\r\n    editTodo: PropTypes.func.isRequired,\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { isEdit } = this.state;\r\n    if (isEdit) {\r\n      this.inputFocusRef.current.focus();\r\n    }\r\n  }\r\n\r\n  handleInputClick = () => {\r\n    const {\r\n      id,\r\n      toggleTodo,\r\n    } = this.props;\r\n    toggleTodo(id);\r\n  };\r\n\r\n  handleBtnDeleteClick = () => {\r\n    const {\r\n      id,\r\n      removeTodo,\r\n    } = this.props;\r\n    removeTodo(id);\r\n  };\r\n\r\n  handleLabelDblClick = () => {\r\n    this.setState({ isEdit: true });\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    this.handleNewInputEdit(e);\r\n  };\r\n\r\n  handleBlur = (e) => {\r\n    this.handleNewInputEdit(e);\r\n  };\r\n\r\n  handleNewInputEdit = (e) => {\r\n    const {\r\n      id,\r\n      editTodo,\r\n      removeTodo,\r\n    } = this.props;\r\n    let { text } = this.props;\r\n    if (!e.keyCode || e.keyCode === 13) {\r\n      if (e.target.value !== '') {\r\n        text = e.target.value;\r\n        editTodo(id, text);\r\n        this.setState({ isEdit: false });\r\n      } else {\r\n        removeTodo(id);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, isComplete } = this.props;\r\n    const { isEdit } = this.state;\r\n    return (\r\n      <li className=\"item\">\r\n        <div className=\"content-wrap\">\r\n          <input\r\n            onClick={this.handleInputClick}\r\n            className=\"complete\"\r\n            type=\"checkbox\"\r\n            checked={isComplete}\r\n            onChange={() => {}}\r\n          />\r\n          {isEdit ? (\r\n            <input\r\n              className=\"edit\"\r\n              ref={this.inputFocusRef}\r\n              onBlur={this.handleBlur}\r\n              onKeyDown={this.handleKeyDown}\r\n              defaultValue={text}\r\n            />\r\n          ) : (\r\n            <span className=\"caption\" onDoubleClick={this.handleLabelDblClick}>\r\n              {text}\r\n            </span>\r\n          )}\r\n          <button\r\n            className=\"delete\"\r\n            type=\"submit\"\r\n            onClick={this.handleBtnDeleteClick}\r\n          />\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoListItem from './TodoListItem/index';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = ({\r\n  todos,\r\n  toggleTodo,\r\n  editTodo,\r\n  removeTodo,\r\n}) => {\r\n  const elements = todos.map(item => (\r\n    <TodoListItem\r\n      key={item.id}\r\n      {...item}\r\n      toggleTodo={toggleTodo}\r\n      editTodo={editTodo}\r\n      removeTodo={removeTodo}\r\n    />\r\n\r\n  ));\r\n  return <ul className=\"todo-list\">{elements}</ul>;\r\n};\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired,\r\n  editTodo: PropTypes.func.isRequired,\r\n  removeTodo: PropTypes.func.isRequired,\r\n\r\n};\r\n\r\nexport default TodoList;\r\n","import { connect } from 'react-redux';\r\nimport { removeTodoAction, toggleTodoAction, editTodoAction } from '../../actions';\r\nimport TodoList from './TodoList';\r\n\r\nconst getFilter = (todos, filter) => {\r\n  switch (filter) {\r\n    case 'all':\r\n      return todos;\r\n    case 'completed':\r\n      return todos.filter(item => item.isComplete);\r\n    case 'active':\r\n      return todos.filter(item => !item.isComplete);\r\n    default:\r\n      return todos;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({ todos: getFilter(state.todos, state.visibleFilter) });\r\nexport default\r\nconnect(mapStateToProps,\r\n  {\r\n    removeTodo: removeTodoAction,\r\n    toggleTodo: toggleTodoAction,\r\n    editTodo: editTodoAction,\r\n  })(TodoList);\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React, { Fragment } from 'react';\r\nimport HeaderContainer from '../Header';\r\nimport FooterContainer from '../Footer';\r\nimport './App.css';\r\nimport TodoListContainer from '../TodoList/TodoListContainer';\r\n\r\nconst App = () => (\r\n  <Fragment>\r\n    <HeaderContainer />\r\n    <TodoListContainer />\r\n    <FooterContainer />\r\n  </Fragment>\r\n);\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n"],"sourceRoot":""}