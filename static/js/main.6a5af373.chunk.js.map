{"version":3,"sources":["reducers/visibleFilter.js","reducers/todos.js","reducers/index.js","store.js","actions/index.js","constants/ActionTypes.js","components/Header/ToggleAllTodos/index.js","components/Header/ToggleAllTodos/ToggleAllTodos.jsx","components/Header/NewItemTodo/index.js","components/Header/NewItemTodo/NewItemTodo.jsx","components/Header/Header.jsx","components/Header/index.js","components/Header/HeaderContainer.jsx","components/Footer/Filters/FilterItem/index.js","components/Footer/Filters/FilterItem/FilterItem.jsx","constants/filters.js","components/Footer/Filters/index.js","components/Footer/Filters/Filters.jsx","components/Footer/Footer.jsx","components/Footer/index.js","components/Footer/FooterContainer.jsx","components/TodoList/TodoListItem/index.js","components/TodoList/TodoListItem/TodoListItem.jsx","components/TodoList/TodoList.jsx","components/TodoList/TodoListContainer.jsx","components/App/index.js","components/App/App.jsx","index.js"],"names":["initialState","visibleFilter","localStorage","getItem","state","arguments","length","undefined","action","type","payload","setItem","todos","JSON","parse","concat","Object","toConsumableArray","filter","el","id","index","findIndex","updatedObj","assign","isComplete","slice","text","isToggleAll","every","map","objectSpread","stringify","reducers","combineReducers","store","createStore","composeWithDevTools","removeTodoAction","addTodoAction","obj","toggleTodoAction","editTodoAction","saveTodoAction","toggleAllTodosAction","removeCompletedTodosAction","setFilterAction","saveFilterAction","ToggleAllTodos","handleClick","_this$props","_this","props","_this$props2","this","total","active","react_default","a","createElement","className","hidden","htmlFor","onClick","onChange","checked","PureComponent","NewItemTodo","e","keyCode","target","value","Date","now","handleBlur","handleKeyDown","onBlur","onKeyDown","placeholder","Header","_ref","Fragment","Header_ToggleAllTodos","Header_NewItemTodo","HeaderContainer","connect","FilterItem","filterName","isCurrent","filterLabel","defaultChecked","name","filters","label","Filters","selectedFilter","elements","_ref2","Filters_FilterItem","key","Footer","completed","Footer_Filters","FooterContainer","TodoListItem","isEdit","inputFocusRef","React","createRef","handleInputClick","handleBtnDestroyClick","handleLabelDblClick","setState","handleNewInputEdit","_this$props3","current","focus","_this$props4","ref","defaultValue","onDoubleClick","TodoList","actions","objectWithoutProperties","item","TodoList_TodoListItem","getFilter","array","App","components_Header","TodoListContainer","components_Footer","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.6a5af373.chunk.js","sourcesContent":["const initialState = {\r\n  visibleFilter: localStorage.getItem('filter') || 'all',\r\n};\r\n\r\nconst visibleFilter = (state = initialState.visibleFilter, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'SET_FILTER': {\r\n      return payload;\r\n    }\r\n    default:\r\n      return state;\r\n    case 'SAVE_FILTER': {\r\n      localStorage.setItem('filter', payload);\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default visibleFilter;\r\n","const initialState = {\r\n  todos: JSON.parse(localStorage.getItem('todo')) || [],\r\n};\r\n\r\nconst todos = (state = initialState.todos, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'ADD_TODO': {\r\n      return [...state, payload];\r\n    }\r\n    case 'REMOVE_TODO': {\r\n      return state.filter(el => el.id !== payload);\r\n    }\r\n    case 'TOGGLE_TODO': {\r\n      const index = state.findIndex(el => el.id === payload);\r\n      const updatedObj = Object.assign({}, state[index],\r\n        { isComplete: !state[index].isComplete });\r\n      return [\r\n        ...state.slice(0, index),\r\n        updatedObj,\r\n        ...state.slice(index + 1),\r\n      ];\r\n    }\r\n    case 'EDIT_TODO': {\r\n      const index = state.findIndex(el => el.id === payload.id);\r\n      const updatedObj = Object.assign({}, state[index], { text: payload.text });\r\n      return [\r\n        ...state.slice(0, index),\r\n        updatedObj,\r\n        ...state.slice(index + 1),\r\n      ];\r\n    }\r\n    case 'TOGGLE_ALL_TODOS': {\r\n      const isToggleAll = state.every(el => el.isComplete);\r\n      return state.map(el => ({\r\n        ...el,\r\n        isComplete: !isToggleAll,\r\n      }));\r\n    }\r\n    case 'REMOVE_COMPLETED_TODOS': {\r\n      return state.filter(el => !el.isComplete);\r\n    }\r\n    case 'SAVE_TODO': {\r\n      localStorage.setItem('todo', JSON.stringify(state));\r\n      return state;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todos;\r\n","import { combineReducers } from 'redux';\r\nimport visibleFilter from './visibleFilter';\r\nimport todos from './todos';\r\n\r\n\r\nconst reducers = combineReducers({\r\n  visibleFilter,\r\n  todos,\r\n});\r\nexport default reducers;\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, composeWithDevTools());\r\n\r\nexport default store;\r\n","import * as types from '../constants/ActionTypes';\r\n\r\nconst removeTodoAction = id => ({ type: types.REMOVE_TODO, payload: id });\r\nconst addTodoAction = obj => ({ type: types.ADD_TODO, payload: obj });\r\nconst toggleTodoAction = id => ({ type: types.TOGGLE_TODO, payload: id });\r\nconst editTodoAction = (id, text) => ({ type: types.EDIT_TODO, payload: { id, text } });\r\nconst saveTodoAction = () => ({ type: types.SAVE_TODO });\r\nconst toggleAllTodosAction = () => ({ type: types.TOGGLE_ALL_TODOS });\r\nconst removeCompletedTodosAction = () => ({ type: types.REMOVE_COMPLETED_TODOS });\r\nconst setFilterAction = filter => ({ type: types.SET_FILTER, payload: filter });\r\nconst saveFilterAction = filter => ({ type: types.SAVE_FILTER, payload: filter });\r\n\r\nexport {\r\n  removeTodoAction,\r\n  toggleTodoAction,\r\n  addTodoAction,\r\n  editTodoAction,\r\n  toggleAllTodosAction,\r\n  removeCompletedTodosAction,\r\n  setFilterAction,\r\n  saveTodoAction,\r\n  saveFilterAction,\r\n};\r\n","export const REMOVE_TODO = 'REMOVE_TODO';\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const SAVE_TODO = 'SAVE_TODO';\r\nexport const SAVE_FILTER = 'SAVE_FILTER';\r\nexport const TOGGLE_ALL_TODOS = 'TOGGLE_ALL_TODOS';\r\nexport const REMOVE_COMPLETED_TODOS = 'REMOVE_COMPLETED_TODOS';\r\nexport const SET_FILTER = 'SET_FILTER';\r\n","import ToggleAllTodos from './ToggleAllTodos';\r\n\r\nexport default ToggleAllTodos;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ToggleAllTodos.css';\r\n\r\nexport default class ToggleAllTodos extends PureComponent {\r\n  handleClick = () => {\r\n    const { toggleAllTodosAction, saveTodoAction } = this.props;\r\n    toggleAllTodosAction();\r\n    saveTodoAction();\r\n  }\r\n\r\n  render() {\r\n    const { total, active } = this.props;\r\n    return (\r\n      <label\r\n        className=\"label-select-all\"\r\n        hidden={total === 0}\r\n        htmlFor=\"select-all\"\r\n      >\r\n        <input\r\n          onClick={this.handleClick}\r\n          onChange={() => {}}\r\n          checked={active === 0}\r\n          type=\"checkbox\"\r\n          id=\"select-all\"\r\n          className=\"select-all\"\r\n        />\r\n        <span className=\"select-all-pseudo\" />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nToggleAllTodos.propTypes = {\r\n  toggleAllTodosAction: PropTypes.func.isRequired,\r\n  saveTodoAction: PropTypes.func.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  active: PropTypes.number.isRequired,\r\n};\r\n","import NewItemTodo from './NewItemTodo';\r\n\r\nexport default NewItemTodo;\r\n","import React, { PureComponent } from 'react';\r\nimport './NewItemTodo.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class NewItemTodo extends PureComponent {\r\n  createElement = (e) => {\r\n    const { addTodoAction, saveTodoAction } = this.props;\r\n    if (!e.keyCode || e.keyCode === 13) {\r\n      if (e.target.value !== '') {\r\n        const obj = { id: Date.now(), text: e.target.value, isComplete: false };\r\n        addTodoAction(obj);\r\n        saveTodoAction();\r\n        e.target.value = '';\r\n      }\r\n    }\r\n  };\r\n\r\n  handleBlur = (e) => {\r\n    this.createElement(e);\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    this.createElement(e);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        className=\"header__new-item\"\r\n        onBlur={this.handleBlur}\r\n        onKeyDown={this.handleKeyDown}\r\n        placeholder=\"What needs to be done?\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nNewItemTodo.propTypes = {\r\n  addTodoAction: PropTypes.func.isRequired,\r\n  saveTodoAction: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ToggleAllTodos from './ToggleAllTodos';\r\nimport NewItemTodo from './NewItemTodo';\r\n\r\nconst Header = ({\r\n  total,\r\n  active,\r\n  toggleAllTodosAction,\r\n  addTodoAction,\r\n  saveTodoAction,\r\n}) => (\r\n  <React.Fragment>\r\n    <ToggleAllTodos\r\n      toggleAllTodosAction={toggleAllTodosAction}\r\n      saveTodoAction={saveTodoAction}\r\n      total={total}\r\n      active={active}\r\n    />\r\n    <NewItemTodo\r\n      addTodoAction={addTodoAction}\r\n      saveTodoAction={saveTodoAction}\r\n    />\r\n  </React.Fragment>\r\n);\r\nexport default Header;\r\n\r\nHeader.propTypes = {\r\n  toggleAllTodosAction: PropTypes.func.isRequired,\r\n  addTodoAction: PropTypes.func.isRequired,\r\n  saveTodoAction: PropTypes.func.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  active: PropTypes.number.isRequired,\r\n};\r\n","import HeaderContainer from './HeaderContainer';\r\n\r\nexport default HeaderContainer;\r\n","import { connect } from 'react-redux';\r\nimport { addTodoAction, toggleAllTodosAction, saveTodoAction } from '../../actions';\r\nimport Header from './Header';\r\n\r\nconst mapStateToProps = state => ({\r\n  total: state.todos.length,\r\n  active: state.todos.filter(el => !el.isComplete).length,\r\n});\r\nexport default\r\nconnect(mapStateToProps, { addTodoAction, toggleAllTodosAction, saveTodoAction })(Header);\r\n","import FilterItem from './FilterItem';\r\n\r\nexport default FilterItem;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class FilterItem extends PureComponent {\r\n  handleClick = () => {\r\n    const {\r\n      setFilterAction,\r\n      filterName,\r\n      saveFilterAction,\r\n    } = this.props;\r\n    setFilterAction(filterName);\r\n    saveFilterAction(filterName);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isCurrent,\r\n      filterName,\r\n      filterLabel,\r\n    } = this.props;\r\n    return (\r\n      <li className=\"filters__item\">\r\n        <input\r\n          className=\"filter\"\r\n          defaultChecked={isCurrent}\r\n          type=\"radio\"\r\n          name=\"group\"\r\n          id={filterName}\r\n          onClick={this.handleClick}\r\n        />\r\n        <label\r\n          htmlFor={filterName}\r\n          className={filterName}\r\n        >\r\n          {filterLabel}\r\n        </label>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nFilterItem.propTypes = {\r\n  setFilterAction: PropTypes.func.isRequired,\r\n  saveFilterAction: PropTypes.func.isRequired,\r\n  isCurrent: PropTypes.bool.isRequired,\r\n  filterName: PropTypes.string.isRequired,\r\n  filterLabel: PropTypes.string.isRequired,\r\n};\r\n","const filters = [\r\n  { name: 'all', label: 'All' },\r\n  { name: 'active', label: 'Active' },\r\n  { name: 'completed', label: 'Completed' },\r\n];\r\nexport default filters;\r\n","import Filters from './Filters';\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FilterItem from './FilterItem/index';\r\nimport filters from '../../../constants/filters';\r\nimport './Filters.css';\r\n\r\nconst Filters = ({\r\n  selectedFilter,\r\n  setFilterAction,\r\n  saveFilterAction,\r\n}) => {\r\n  const elements = filters.map(({ name, label }) => (\r\n    <FilterItem\r\n      key={name}\r\n      filterName={name}\r\n      filterLabel={label}\r\n      setFilterAction={setFilterAction}\r\n      saveFilterAction={saveFilterAction}\r\n      isCurrent={selectedFilter === name}\r\n    />\r\n  ));\r\n  return <ul className=\"filters\">{elements}</ul>;\r\n};\r\nexport default Filters;\r\n\r\nFilters.propTypes = {\r\n  selectedFilter: PropTypes.string.isRequired,\r\n  setFilterAction: PropTypes.func.isRequired,\r\n  saveFilterAction: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Filters from './Filters';\r\n\r\nconst Footer = ({\r\n  total,\r\n  completed,\r\n  filter,\r\n  removeCompletedTodosAction,\r\n  setFilterAction,\r\n  saveFilterAction,\r\n}) => (\r\n  <footer className={`footer ${total === 0 ? ' hidden' : ''}`}>\r\n    <span className=\"counter\">\r\n      {`${total - completed} items left`}\r\n    </span>\r\n    <Filters\r\n      selectedFilter={filter}\r\n      saveFilterAction={saveFilterAction}\r\n      setFilterAction={setFilterAction}\r\n\r\n    />\r\n    <button\r\n      className=\"clear-completed\"\r\n      type=\"submit\"\r\n      hidden={completed === 0}\r\n      onClick={removeCompletedTodosAction}\r\n    >\r\n      {'Clear completed'}\r\n    </button>\r\n  </footer>\r\n);\r\n\r\nFooter.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  completed: PropTypes.number.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  removeCompletedTodosAction: PropTypes.func.isRequired,\r\n  setFilterAction: PropTypes.func.isRequired,\r\n  saveFilterAction: PropTypes.func.isRequired,\r\n};\r\nexport default Footer;\r\n","import FooterContainer from './FooterContainer';\r\n\r\nexport default FooterContainer;\r\n","import { connect } from 'react-redux';\r\nimport Footer from './Footer';\r\nimport { removeCompletedTodosAction, setFilterAction, saveFilterAction } from '../../actions';\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.visibleFilter,\r\n  total: state.todos.length,\r\n  completed: state.todos.filter(el => el.isComplete).length,\r\n});\r\nexport default\r\nconnect(mapStateToProps, { removeCompletedTodosAction, setFilterAction, saveFilterAction })(Footer);\r\n","import TodoListItem from './TodoListItem';\r\n\r\nexport default TodoListItem;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TodoListItem.css';\r\n\r\n\r\nexport default class TodoListItem extends PureComponent {\r\n  state = { isEdit: false };\r\n\r\n  inputFocusRef = React.createRef();\r\n\r\n  componentDidUpdate() {\r\n    const { isEdit } = this.state;\r\n    if (isEdit) {\r\n      this.inputFocusRef.current.focus();\r\n    }\r\n  }\r\n\r\n  handleInputClick = () => {\r\n    const {\r\n      id,\r\n      isComplete,\r\n      toggleTodoAction,\r\n      saveTodoAction,\r\n    } = this.props;\r\n    toggleTodoAction(id, isComplete);\r\n    saveTodoAction();\r\n  };\r\n\r\n  handleBtnDestroyClick = () => {\r\n    const {\r\n      id,\r\n      removeTodoAction,\r\n      saveTodoAction,\r\n    } = this.props;\r\n    removeTodoAction(id);\r\n    saveTodoAction();\r\n  };\r\n\r\n\r\n  handleLabelDblClick = () => {\r\n    this.setState({ isEdit: true });\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    this.handleNewInputEdit(e);\r\n  };\r\n\r\n  handleBlur = (e) => {\r\n    this.handleNewInputEdit(e);\r\n  };\r\n\r\n  handleNewInputEdit = (e) => {\r\n    const {\r\n      id,\r\n      editTodoAction,\r\n      removeTodoAction,\r\n      saveTodoAction,\r\n    } = this.props;\r\n    let { text } = this.props;\r\n    if (!e.keyCode || e.keyCode === 13) {\r\n      if (e.target.value !== '') {\r\n        text = e.target.value;\r\n        editTodoAction(id, text);\r\n        this.setState({ isEdit: false });\r\n        saveTodoAction();\r\n      } else {\r\n        removeTodoAction(id);\r\n        saveTodoAction();\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, isComplete } = this.props;\r\n    const { isEdit } = this.state;\r\n    return (\r\n      <li className=\"item\">\r\n        <div className=\"content-wrap\">\r\n          <input\r\n            onClick={this.handleInputClick}\r\n            onChange={() => {}}\r\n            className=\"complete\"\r\n            type=\"checkbox\"\r\n            checked={isComplete}\r\n          />\r\n          {isEdit ? (\r\n            <input\r\n              className=\"edit\"\r\n              ref={this.inputFocusRef}\r\n              onBlur={this.handleBlur}\r\n              onKeyDown={this.handleKeyDown}\r\n              defaultValue={text}\r\n            />\r\n          ) : (\r\n            <span className=\"caption\" onDoubleClick={this.handleLabelDblClick}>\r\n              {text}\r\n            </span>\r\n          )}\r\n          <button\r\n            className=\"destroy\"\r\n            type=\"submit\"\r\n            onClick={this.handleBtnDestroyClick}\r\n          />\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nTodoListItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  isComplete: PropTypes.bool.isRequired,\r\n  removeTodoAction: PropTypes.func.isRequired,\r\n  toggleTodoAction: PropTypes.func.isRequired,\r\n  editTodoAction: PropTypes.func.isRequired,\r\n  saveTodoAction: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoListItem from './TodoListItem/index';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = ({\r\n  todos,\r\n  ...actions\r\n}) => {\r\n  const elements = todos.map(item => (\r\n    <TodoListItem\r\n      key={item.id}\r\n      {...item}\r\n      {...actions}\r\n    />\r\n\r\n  ));\r\n  return <ul className=\"todo-list\">{elements}</ul>;\r\n};\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n\r\n};\r\n\r\nexport default TodoList;\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../../actions';\r\nimport TodoList from './TodoList';\r\n\r\nconst getFilter = (array, filter) => {\r\n  switch (filter) {\r\n    case 'all':\r\n      return array;\r\n    case 'completed':\r\n      return array.filter(item => item.isComplete);\r\n    case 'active':\r\n      return array.filter(item => !item.isComplete);\r\n    default:\r\n      return array;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({ todos: getFilter(state.todos, state.visibleFilter) });\r\nexport default connect(mapStateToProps, actions)(TodoList);\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport HeaderContainer from '../Header';\r\nimport FooterContainer from '../Footer';\r\nimport './App.css';\r\nimport TodoListContainer from '../TodoList/TodoListContainer';\r\n\r\nconst App = () => (\r\n  <React.Fragment>\r\n    <HeaderContainer />\r\n    <TodoListContainer />\r\n    <FooterContainer />\r\n  </React.Fragment>\r\n);\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n"],"sourceRoot":""}