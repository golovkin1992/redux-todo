{"version":3,"sources":["reducers/visibleFilter.js","reducers/todos.js","reducers/index.js","store.js","components/Header/ToggleAllTodos/index.js","components/Header/ToggleAllTodos/ToggleAllTodos.jsx","components/Header/NewItemTodo/index.js","components/Header/NewItemTodo/NewItemTodo.jsx","components/Header/Header.jsx","components/Header/index.js","components/Header/HeaderContainer.jsx","actions/index.js","constants/ActionTypes.js","components/Footer/Filters/FilterItem/index.js","components/Footer/Filters/FilterItem/FilterItem.jsx","constants/filters.js","components/Footer/Filters/index.js","components/Footer/Filters/Filters.jsx","components/Footer/Footer.jsx","components/Footer/index.js","components/Footer/FooterContainer.jsx","components/TodoList/TodoListItem/index.js","components/TodoList/TodoListItem/TodoListItem.jsx","components/TodoList/TodoList.jsx","components/TodoList/TodoListContainer.jsx","components/App/index.js","components/App/App.jsx","index.js"],"names":["initialState","visibleFilter","localStorage","getItem","todos","JSON","parse","reducers","combineReducers","state","arguments","length","undefined","action","type","payload","setItem","newState","concat","Object","toConsumableArray","stringify","filter","el","id","index","findIndex","updatedObj","assign","isComplete","slice","text","isToggleAll","every","map","objectSpread","store","createStore","composeWithDevTools","ToggleAllTodos","_ref","total","active","toggleAllTodos","react_default","a","createElement","className","hidden","htmlFor","onChange","checked","NewItemTodo","e","addTodo","_this","props","keyCode","Date","now","setState","handleChange","target","value","handleBlur","handleKeyDown","this","onBlur","onKeyDown","placeholder","PureComponent","Header","react","Header_ToggleAllTodos","Header_NewItemTodo","HeaderContainer","connect","newItem","FilterItem","handleInputChange","_this$props","setFilter","filterName","_this$props2","isCurrent","filterLabel","name","filters","label","Filters","selectedFilter","elements","_ref2","Filters_FilterItem","key","Footer","completed","removeCompletedTodos","Footer_Filters","onClick","FooterContainer","TodoListItem","isEditing","inputFocusRef","React","createRef","toggleTodo","handleBtnDeleteClick","removeTodo","handleLabelDblClick","handleInputEdit","_this$props3","editTodo","current","focus","_this$props4","ref","defaultValue","onDoubleClick","TodoList","item","TodoList_TodoListItem","getFilter","App","components_Header","TodoListContainer","components_Footer","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.2fef2b5b.chunk.js","sourcesContent":["const initialState = {\r\n  visibleFilter: localStorage.getItem('filter') || 'all',\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'SET_FILTER': {\r\n      localStorage.setItem('filter', payload);\r\n      return { visibleFilter: payload };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","const initialState = {\r\n  todos: JSON.parse(localStorage.getItem('todo')) || [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { todos } = state;\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'ADD_TODO': {\r\n      const newState = { todos: [...todos, payload] };\r\n      localStorage.setItem('todo', JSON.stringify(newState.todos));\r\n      return newState;\r\n    }\r\n    case 'REMOVE_TODO': {\r\n      const newState = { todos: todos.filter(el => el.id !== payload) };\r\n      localStorage.setItem('todo', JSON.stringify(newState.todos));\r\n      return newState;\r\n    }\r\n    case 'TOGGLE_TODO': {\r\n      const index = todos.findIndex(el => el.id === payload);\r\n      const updatedObj = Object.assign({}, todos[index],\r\n        { isComplete: !todos[index].isComplete });\r\n      const newState = {\r\n        todos: [\r\n          ...todos.slice(0, index),\r\n          updatedObj,\r\n          ...todos.slice(index + 1),\r\n        ],\r\n      };\r\n      localStorage.setItem('todo', JSON.stringify(newState.todos));\r\n      return newState;\r\n    }\r\n    case 'EDIT_TODO': {\r\n      const { id, text } = payload;\r\n      const index = todos.findIndex(el => el.id === id);\r\n      const updatedObj = Object.assign({}, todos[index], { text });\r\n      const newState = {\r\n        todos: [\r\n          ...todos.slice(0, index),\r\n          updatedObj,\r\n          ...todos.slice(index + 1),\r\n        ],\r\n      };\r\n      localStorage.setItem('todo', JSON.stringify(newState.todos));\r\n      return newState;\r\n    }\r\n    case 'TOGGLE_ALL_TODOS': {\r\n      const isToggleAll = todos.every(el => el.isComplete);\r\n      const newState = {\r\n        todos: todos.map(el => ({\r\n          ...el,\r\n          isComplete: !isToggleAll,\r\n        })),\r\n      };\r\n      localStorage.setItem('todo', JSON.stringify(newState.todos));\r\n      return newState;\r\n    }\r\n    case 'REMOVE_COMPLETED_TODOS': {\r\n      const newState = { todos: todos.filter(el => !el.isComplete) };\r\n      localStorage.setItem('todo', JSON.stringify(newState.todos));\r\n      return newState;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport visibleFilter from './visibleFilter';\r\nimport todos from './todos';\r\n\r\nconst reducers = combineReducers({\r\n  visibleFilter,\r\n  todos,\r\n});\r\nexport default reducers;\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, composeWithDevTools());\r\n\r\nexport default store;\r\n","import ToggleAllTodos from './ToggleAllTodos';\r\n\r\nexport default ToggleAllTodos;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ToggleAllTodos.css';\r\n\r\nconst ToggleAllTodos = ({\r\n  total,\r\n  active,\r\n  toggleAllTodos,\r\n}) => (\r\n  <label\r\n    className=\"label-select-all\"\r\n    hidden={total === 0}\r\n    htmlFor=\"select-all\"\r\n  >\r\n    <input\r\n      onChange={toggleAllTodos}\r\n      checked={active === 0}\r\n      type=\"checkbox\"\r\n      id=\"select-all\"\r\n      className=\"select-all\"\r\n    />\r\n    <span className=\"select-all-pseudo\" />\r\n  </label>\r\n);\r\n\r\nToggleAllTodos.propTypes = {\r\n  toggleAllTodos: PropTypes.func.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  active: PropTypes.number.isRequired,\r\n};\r\nexport default ToggleAllTodos;\r\n","import NewItemTodo from './NewItemTodo';\r\n\r\nexport default NewItemTodo;\r\n","import React, { PureComponent } from 'react';\r\nimport './NewItemTodo.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class NewItemTodo extends PureComponent {\r\n  state = {\r\n    text: '',\r\n  }\r\n\r\n  createElement = (e) => {\r\n    const { addTodo } = this.props;\r\n    const { text } = this.state;\r\n    if (!e.keyCode || e.keyCode === 13) {\r\n      if (text !== '') {\r\n        const newItem = { id: Date.now(), text, isComplete: false };\r\n        addTodo(newItem);\r\n        this.setState({ text: '' });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ text: e.target.value });\r\n  }\r\n\r\n  handleBlur = (e) => {\r\n    this.createElement(e);\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    this.createElement(e);\r\n  };\r\n\r\n  render() {\r\n    const { text } = this.state;\r\n    return (\r\n      <input\r\n        className=\"header__new-item\"\r\n        onBlur={this.handleBlur}\r\n        onKeyDown={this.handleKeyDown}\r\n        onChange={this.handleChange}\r\n        placeholder=\"What needs to be done?\"\r\n        value={text}\r\n      />\r\n    );\r\n  }\r\n}\r\nNewItemTodo.propTypes = {\r\n  addTodo: PropTypes.func.isRequired,\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ToggleAllTodos from './ToggleAllTodos';\r\nimport NewItemTodo from './NewItemTodo';\r\n\r\nconst Header = ({\r\n  total,\r\n  active,\r\n  toggleAllTodos,\r\n  addTodo,\r\n}) => (\r\n  <Fragment>\r\n    <ToggleAllTodos\r\n      toggleAllTodos={toggleAllTodos}\r\n      total={total}\r\n      active={active}\r\n    />\r\n    <NewItemTodo\r\n      addTodo={addTodo}\r\n    />\r\n  </Fragment>\r\n);\r\nexport default Header;\r\n\r\nHeader.propTypes = {\r\n  toggleAllTodos: PropTypes.func.isRequired,\r\n  addTodo: PropTypes.func.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  active: PropTypes.number.isRequired,\r\n};\r\n","import HeaderContainer from './HeaderContainer';\r\n\r\nexport default HeaderContainer;\r\n","import { connect } from 'react-redux';\r\nimport { addTodoAction, toggleAllTodosAction } from '../../actions';\r\nimport Header from './Header';\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { todos: { todos } } = state;\r\n  return {\r\n    total: todos.length,\r\n    active: todos.filter(el => !el.isComplete).length,\r\n  };\r\n};\r\nexport default\r\nconnect(mapStateToProps,\r\n  {\r\n    addTodo: addTodoAction,\r\n    toggleAllTodos: toggleAllTodosAction,\r\n  })(Header);\r\n","import * as types from '../constants/ActionTypes';\r\n\r\nconst {\r\n  REMOVE_TODO,\r\n  ADD_TODO,\r\n  TOGGLE_TODO,\r\n  EDIT_TODO,\r\n  SAVE_TODO,\r\n  SAVE_FILTER,\r\n  TOGGLE_ALL_TODOS,\r\n  REMOVE_COMPLETED_TODOS,\r\n  SET_FILTER,\r\n} = types;\r\n\r\nconst removeTodoAction = id => ({ type: REMOVE_TODO, payload: id });\r\nconst addTodoAction = newItem => ({ type: ADD_TODO, payload: newItem });\r\nconst toggleTodoAction = id => ({ type: TOGGLE_TODO, payload: id });\r\nconst editTodoAction = (id, text) => ({ type: EDIT_TODO, payload: { id, text } });\r\nconst saveTodoAction = () => ({ type: SAVE_TODO });\r\nconst toggleAllTodosAction = () => ({ type: TOGGLE_ALL_TODOS });\r\nconst removeCompletedTodosAction = () => ({ type: REMOVE_COMPLETED_TODOS });\r\nconst setFilterAction = filter => ({ type: SET_FILTER, payload: filter });\r\nconst saveFilterAction = filter => ({ type: SAVE_FILTER, payload: filter });\r\n\r\nexport {\r\n  removeTodoAction,\r\n  toggleTodoAction,\r\n  addTodoAction,\r\n  editTodoAction,\r\n  toggleAllTodosAction,\r\n  removeCompletedTodosAction,\r\n  setFilterAction,\r\n  saveTodoAction,\r\n  saveFilterAction,\r\n};\r\n","export const REMOVE_TODO = 'REMOVE_TODO';\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const SAVE_TODO = 'SAVE_TODO';\r\nexport const SAVE_FILTER = 'SAVE_FILTER';\r\nexport const TOGGLE_ALL_TODOS = 'TOGGLE_ALL_TODOS';\r\nexport const REMOVE_COMPLETED_TODOS = 'REMOVE_COMPLETED_TODOS';\r\nexport const SET_FILTER = 'SET_FILTER';\r\n","import FilterItem from './FilterItem';\r\n\r\nexport default FilterItem;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class FilterItem extends PureComponent {\r\n  handleInputChange = () => {\r\n    const {\r\n      setFilter,\r\n      filterName,\r\n    } = this.props;\r\n    setFilter(filterName);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isCurrent,\r\n      filterName,\r\n      filterLabel,\r\n    } = this.props;\r\n    return (\r\n      <li className=\"filters__item\">\r\n        <input\r\n          className=\"filter\"\r\n          checked={isCurrent}\r\n          type=\"radio\"\r\n          name=\"group\"\r\n          id={filterName}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <label\r\n          htmlFor={filterName}\r\n          className={filterName}\r\n        >\r\n          {filterLabel}\r\n        </label>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nFilterItem.propTypes = {\r\n  setFilter: PropTypes.func.isRequired,\r\n  isCurrent: PropTypes.bool.isRequired,\r\n  filterName: PropTypes.string.isRequired,\r\n  filterLabel: PropTypes.string.isRequired,\r\n};\r\n","const filters = [\r\n  { name: 'all', label: 'All' },\r\n  { name: 'active', label: 'Active' },\r\n  { name: 'completed', label: 'Completed' },\r\n];\r\nexport default filters;\r\n","import Filters from './Filters';\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FilterItem from './FilterItem/index';\r\nimport filters from '../../../constants/filters';\r\nimport './Filters.css';\r\n\r\nconst Filters = ({\r\n  selectedFilter,\r\n  setFilter,\r\n}) => {\r\n  const elements = filters.map(({ name, label }) => (\r\n    <FilterItem\r\n      key={name}\r\n      filterName={name}\r\n      filterLabel={label}\r\n      setFilter={setFilter}\r\n      isCurrent={selectedFilter === name}\r\n    />\r\n  ));\r\n  return <ul className=\"filters\">{elements}</ul>;\r\n};\r\nexport default Filters;\r\n\r\nFilters.propTypes = {\r\n  selectedFilter: PropTypes.string.isRequired,\r\n  setFilter: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Filters from './Filters';\r\n\r\nconst Footer = ({\r\n  total,\r\n  completed,\r\n  filter,\r\n  removeCompletedTodos,\r\n  setFilter,\r\n}) => (\r\n  <footer className={`footer ${total === 0 ? ' hidden' : ''}`}>\r\n    <span className=\"counter\">\r\n      {`${total - completed} items left`}\r\n    </span>\r\n    <Filters\r\n      selectedFilter={filter}\r\n      setFilter={setFilter}\r\n    />\r\n    <button\r\n      className=\"clear-completed\"\r\n      type=\"submit\"\r\n      hidden={completed === 0}\r\n      onClick={removeCompletedTodos}\r\n    >\r\n    Clear completed\r\n    </button>\r\n  </footer>\r\n);\r\n\r\nFooter.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  completed: PropTypes.number.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  removeCompletedTodos: PropTypes.func.isRequired,\r\n  setFilter: PropTypes.func.isRequired,\r\n};\r\nexport default Footer;\r\n","import FooterContainer from './FooterContainer';\r\n\r\nexport default FooterContainer;\r\n","import { connect } from 'react-redux';\r\nimport Footer from './Footer';\r\nimport { removeCompletedTodosAction, setFilterAction } from '../../actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { todos: { todos }, visibleFilter: { visibleFilter } } = state;\r\n  return {\r\n    filter: visibleFilter,\r\n    total: todos.length,\r\n    completed: todos.filter(el => el.isComplete).length,\r\n  };\r\n};\r\n\r\nexport default\r\nconnect(mapStateToProps,\r\n  {\r\n    removeCompletedTodos: removeCompletedTodosAction,\r\n    setFilter: setFilterAction,\r\n  })(Footer);\r\n","import TodoListItem from './TodoListItem';\r\n\r\nexport default TodoListItem;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TodoListItem.css';\r\n\r\nexport default class TodoListItem extends PureComponent {\r\n  state = { isEditing: false };\r\n\r\n  inputFocusRef = React.createRef();\r\n\r\n  componentDidUpdate() {\r\n    const { isEditing } = this.state;\r\n    if (isEditing) {\r\n      this.inputFocusRef.current.focus();\r\n    }\r\n  }\r\n\r\n  handleInputChange = () => {\r\n    const {\r\n      id,\r\n      toggleTodo,\r\n    } = this.props;\r\n    toggleTodo(id);\r\n  };\r\n\r\n  handleBtnDeleteClick = () => {\r\n    const {\r\n      id,\r\n      removeTodo,\r\n    } = this.props;\r\n    removeTodo(id);\r\n  };\r\n\r\n  handleLabelDblClick = () => {\r\n    this.setState({ isEditing: true });\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    this.handleInputEdit(e);\r\n  };\r\n\r\n  handleBlur = (e) => {\r\n    this.handleInputEdit(e);\r\n  };\r\n\r\n  handleInputEdit = (e) => {\r\n    const {\r\n      id,\r\n      editTodo,\r\n      removeTodo,\r\n    } = this.props;\r\n    if (!e.keyCode || e.keyCode === 13) {\r\n      if (e.target.value !== '') {\r\n        const text = e.target.value;\r\n        editTodo(id, text);\r\n        this.setState({ isEditing: false });\r\n      } else {\r\n        removeTodo(id);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, isComplete } = this.props;\r\n    const { isEditing } = this.state;\r\n    return (\r\n      <li className=\"item\">\r\n        <div className=\"content-wrap\">\r\n          <input\r\n            className=\"complete\"\r\n            type=\"checkbox\"\r\n            checked={isComplete}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          {isEditing ? (\r\n            <input\r\n              className=\"edit\"\r\n              ref={this.inputFocusRef}\r\n              onBlur={this.handleBlur}\r\n              onKeyDown={this.handleKeyDown}\r\n              defaultValue={text}\r\n            />\r\n          ) : (\r\n            <span className=\"caption\" onDoubleClick={this.handleLabelDblClick}>\r\n              {text}\r\n            </span>\r\n          )}\r\n          <button\r\n            className=\"delete\"\r\n            type=\"submit\"\r\n            onClick={this.handleBtnDeleteClick}\r\n          />\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nTodoListItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  isComplete: PropTypes.bool.isRequired,\r\n  removeTodo: PropTypes.func.isRequired,\r\n  toggleTodo: PropTypes.func.isRequired,\r\n  editTodo: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoListItem from './TodoListItem/index';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = ({\r\n  todos,\r\n  toggleTodo,\r\n  editTodo,\r\n  removeTodo,\r\n}) => {\r\n  const elements = todos.map(item => (\r\n    <TodoListItem\r\n      key={item.id}\r\n      {...item}\r\n      toggleTodo={toggleTodo}\r\n      editTodo={editTodo}\r\n      removeTodo={removeTodo}\r\n    />\r\n  ));\r\n  return <ul className=\"todo-list\">{elements}</ul>;\r\n};\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired,\r\n  editTodo: PropTypes.func.isRequired,\r\n  removeTodo: PropTypes.func.isRequired,\r\n};\r\nexport default TodoList;\r\n","import { connect } from 'react-redux';\r\nimport { removeTodoAction, toggleTodoAction, editTodoAction } from '../../actions';\r\nimport TodoList from './TodoList';\r\n\r\nconst getFilter = (todos, filter) => {\r\n  switch (filter) {\r\n    case 'all':\r\n      return todos;\r\n    case 'completed':\r\n      return todos.filter(item => item.isComplete);\r\n    case 'active':\r\n      return todos.filter(item => !item.isComplete);\r\n    default:\r\n      return todos;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { todos: { todos }, visibleFilter: { visibleFilter } } = state;\r\n  return {\r\n    todos: getFilter(todos, visibleFilter),\r\n  };\r\n};\r\n\r\nexport default\r\nconnect(mapStateToProps,\r\n  {\r\n    removeTodo: removeTodoAction,\r\n    toggleTodo: toggleTodoAction,\r\n    editTodo: editTodoAction,\r\n  })(TodoList);\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React, { Fragment } from 'react';\r\nimport HeaderContainer from '../Header';\r\nimport FooterContainer from '../Footer';\r\nimport './App.css';\r\nimport TodoListContainer from '../TodoList/TodoListContainer';\r\n\r\nconst App = () => (\r\n  <Fragment>\r\n    <HeaderContainer />\r\n    <TodoListContainer />\r\n    <FooterContainer />\r\n  </Fragment>\r\n);\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n"],"sourceRoot":""}